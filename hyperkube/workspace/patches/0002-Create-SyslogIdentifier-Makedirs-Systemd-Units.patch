From 90352812cb22ed68880a9abef16a8f838cdad321 Mon Sep 17 00:00:00 2001
From: Julien Balestra <julien.balestra@gmail.com>
Date: Mon, 16 Jan 2017 16:54:01 +0100
Subject: [PATCH] Improvements for rkt

---
 pkg/kubelet/rkt/rkt.go | 33 +++++++++++++++++++++++++++++++++
 1 file changed, 33 insertions(+)

diff --git a/pkg/kubelet/rkt/rkt.go b/pkg/kubelet/rkt/rkt.go
index 5be3f8b..8379083 100644
--- a/pkg/kubelet/rkt/rkt.go
+++ b/pkg/kubelet/rkt/rkt.go
@@ -104,6 +104,10 @@ const (
 	k8sRktStage1NameAnno = "rkt.alpha.kubernetes.io/stage1-name-override"
 	dockerPrefix         = "docker://"
 
+	// This annotation allows a k8s rkt runtime to create directories inside the Systemd with
+	// ExecStartPre=/bin/mkdir -pv content-of-the-annotation
+	k8sRktHostCreateDirectories = "rkt.kubernetes.io/host-create-directories"
+
 	authDir            = "auth.d"
 	dockerAuthTemplate = `{"rktKind":"dockerAuth","rktVersion":"v1","registries":[%q],"credentials":{"user":%q,"password":%q}}`
 
@@ -1111,6 +1115,27 @@ func (r *Runtime) getSelinuxContext(opt *api.SELinuxOptions) (string, error) {
 	return strings.Join(ctx, ":"), nil
 }
 
+// From the generateName or the podName return a basename for improve the logging with the Journal
+// journalctl -t podName -f
+func constructSyslogIdentifier(generateName string, podName string) string {
+	if (len(generateName) > 1 && generateName[len(generateName) - 1] == '-') {
+		return generateName[0:len(generateName) - 1]
+	} else if (len(generateName) > 0) {
+		return generateName
+	} else {
+		return podName
+	}
+}
+
+// Rkt doesn't create the directory if not existing
+// Use the annotations of the Pod to create an ExecStartPre=/bin/mkdir -pv [...]
+func hostCreateDirectoriesByAnnotations(annotations map[string]string) (string, bool) {
+	if val, ok := annotations[k8sRktHostCreateDirectories]; ok {
+		return "/bin/mkdir -pv " + val, true
+	}
+	return "", false
+}
+
 // preparePod will:
 //
 // 1. Invoke 'rkt prepare' to prepare the pod, and get the rkt pod uuid.
@@ -1172,6 +1197,10 @@ func (r *Runtime) preparePod(pod *api.Pod, podIP string, pullSecrets []api.Secre
 
 	hostNetwork := kubecontainer.IsHostNetworkPod(pod)
 	units := []*unit.UnitOption{
+		// Ops helpers
+		newUnitOption("Unit", "Description", pod.Name),
+		newUnitOption("Service", "SyslogIdentifier", constructSyslogIdentifier(pod.GenerateName, pod.Name)),
+
 		newUnitOption("Service", "ExecStart", runPrepared),
 		newUnitOption("Service", "ExecStopPost", markPodFinished),
 		// This enables graceful stop.
@@ -1183,6 +1212,10 @@ func (r *Runtime) preparePod(pod *api.Pod, podIP string, pullSecrets []api.Secre
 		newUnitOption(unitKubernetesSection, unitPodNamespace, pod.Namespace),
 		newUnitOption(unitKubernetesSection, unitPodHostNetwork, fmt.Sprintf("%v", hostNetwork)),
 	}
+	// Volumes Handler
+	if mkdirCommand, ok := hostCreateDirectoriesByAnnotations(pod.Annotations); ok {
+		units = append(units, newUnitOption("Service", "ExecStartPre", mkdirCommand))
+	}
 
 	if pod.Spec.SecurityContext != nil && pod.Spec.SecurityContext.SELinuxOptions != nil {
 		opt := pod.Spec.SecurityContext.SELinuxOptions
-- 
2.7.4

