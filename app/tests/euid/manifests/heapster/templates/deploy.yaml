apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "8082"
    spec:
      serviceAccount: {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /usr/bin/heapster
        - --bind-address=0.0.0.0
        - --profiling=false
        - "--source=kubernetes:https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}?useServiceAccount=true"
        env:
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP

        - name: KUBERNETES_SERVICE_PORT
          value: "6443"

        livenessProbe:
          httpGet:
            path: /healthz
            port: 8082
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 3

        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 8082
          initialDelaySeconds: 30
          timeoutSeconds: 10
          periodSeconds: 2

        resources:
          limits:
            cpu: 300m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 100Mi
