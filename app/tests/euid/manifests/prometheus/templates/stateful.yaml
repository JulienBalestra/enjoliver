apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: 2
  serviceName: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccount: {{ .Chart.Name }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /usr/bin/prometheus
        - -config.file
        - /etc/prometheus/prometheus.yml
        - -storage.local.path
        - /data
        env:
        - name: KUBERNETES_SERVICE_HOST
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP

        - name: KUBERNETES_SERVICE_PORT
          value: "6443"

        volumeMounts:
          - name: config
            mountPath: /etc/prometheus
          - name: data
            mountPath: /data

        livenessProbe:
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 90
          timeoutSeconds: 10
          periodSeconds: 1

        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /
            port: 9090
          initialDelaySeconds: 60
          timeoutSeconds: 10
          periodSeconds: 2

        resources:
          limits:
            cpu: 400m
            memory: 400Mi
          requests:
            cpu: 200m
            memory: 200Mi

      volumes:
        - name: config
          configMap:
            name: {{ .Chart.Name }}
        - name: data
          persistentVolumeClaim:
           claimName: {{ .Chart.Name }}
        # Tell to kubelet to creates the directories
        - name: hack-data
          hostPath:
           path: {{ .Values.hostPathData }}

