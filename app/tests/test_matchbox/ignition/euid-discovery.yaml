---
systemd:
  units:

    - name: lldpd.service
      enable: true
      contents: |
        [Unit]
        Requires=network-online.target
        After=network-online.target
        [Service]
        Environment=LLDP_VOLUME=/run/lldp
        EnvironmentFile=-/etc/metadata-endpoints.env
        ExecStartPre=/bin/mkdir -pv ${LLDP_VOLUME}
        ExecStart=/usr/bin/rkt run --insecure-options=all --mount volume=socket,target=/var/run \
          --net=host \
          {{.lldp_image_url}} \
          --volume socket,kind=host,source=${LLDP_VOLUME} \
          --exec /usr/sbin/lldpd -- -ddd
        [Install]
        WantedBy=multi-user.target

    - name: download-discoveryC.service
      enable: true
      contents: |
        [Unit]
        Requires=network-online.target
        After=network-online.target
        [Service]
        Type=oneshot
        Environment=OPT_BIN=/opt/bin
        EnvironmentFile=-/etc/metadata-endpoints.env
        ExecStartPre=/bin/mkdir -pv ${OPT_BIN}
        ExecStart=/usr/bin/curl -f ${API_URI}/assets/discoveryC/serve/discoveryC \
          -o ${OPT_BIN}/discoveryC
        ExecStartPost=/usr/bin/chmod +x ${OPT_BIN}/discoveryC
        RemainAfterExit=yes
        [Install]
        WantedBy=multi-user.target

    - name: discoveryC.service
      enable: true
      contents: |
        [Unit]
        Requires=download-discoveryC.service
        After=download-discoveryC.service lldpd.service
        [Service]
        TimeoutStartSec=10m
        Environment=LLDP_VOLUME=/run/lldp
        Environment=LLDP_FILE=/run/lldp/lldp.xml
        Environment=IGNITION_FILE=/run/ignition.journal
        EnvironmentFile=-/etc/metadata-endpoints.env
        ExecStartPre=-/bin/bash -c "/usr/bin/journalctl --identifier=ignition -o short-iso > ${IGNITION_FILE}"
        ExecStartPre=-/usr/bin/rkt run --insecure-options=all --mount volume=socket,target=/var/run \
           --net=host \
           {{.lldp_image_url}} \
           --volume socket,kind=host,source=${LLDP_VOLUME} \
           --exec opt/bin/lldp-export
        ExecStart=/opt/bin/discoveryC
        Restart=on-failure
        RestartSec=5s
        [Install]
        WantedBy=multi-user.target

    - name: installer.service
      enable: true
      contents: |
        [Unit]
        Requires=network-online.target
        After=network-online.target
        [Service]
        EnvironmentFile=/etc/metadata-endpoints.env
        # Use short timer in dev
        Environment=TIMER=2
        ExecStart=/opt/installer
        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /etc/hosts
      mode: 0644
      filesystem: root
      contents:
        inline: |
          127.0.0.1	localhost
          {{ if index . "etc_hosts" }}
          {{ range $element := .etc_hosts }}
          {{$element}}
          {{end}}
          {{end}}

    - path: /etc/hostname
      filesystem: root
      mode: 0644
      contents:
        inline: |
          discovery

    - path: /etc/metadata-endpoints.env
      filesystem: root
      mode: 0644
      contents:
        inline: |
          # Customs
          API_URI={{.api_uri}}
          DISCOVERY_ADDRESS={{.api_uri}}/discovery

          # Standards
          REQUEST_RAW_QUERY="{{.request.raw_query}}"
          NORMALIZED_MAC='"{{.request.query.mac}}"'

    - path: /opt/installer
      filesystem: root
      mode: 0500
      contents:
        inline: |
          #!/bin/bash -x

          NEW_IGNITION=/run/new-ignition.json

          if [ -z ${TIMER} ]
          then
              TIMER=60
          fi

          QUERY=${REQUEST_RAW_QUERY}{{if index . "extra_selectors"}}&{{.extra_selectors}}{{end}}

          while true
          do
              curl -f ${API_URI}/scheduler | jq -e ". | has(${NORMALIZED_MAC})"
              if [ $? -eq 0 ]
              then
                  sleep 1
                  curl -o ${NEW_IGNITION} -f \
                    ${API_URI}/ignition?${QUERY} || continue
                  ls -l /run/ignition.json ${NEW_IGNITION}
                  udevadm settle
                  #coreos-install -d /dev/sda -V current -C stable -i ${NEW_IGNITION} || {
                  #  curl -f -XPOST \
                  #    "${API_URI}/lifecycle/coreos-install/${QUERY}/fail"
                  #  exit 2
                  #}
                  curl -f -XPOST "${API_URI}/lifecycle/coreos-install/${QUERY}/success"
                  systemctl reboot
              fi
              sleep ${TIMER}
          done

{{ if index . "ssh_authorized_keys" }}
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        {{ range $element := .ssh_authorized_keys }}
        - {{$element}}
        {{end}}
{{end}}