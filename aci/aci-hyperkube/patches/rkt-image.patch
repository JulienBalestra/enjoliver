From c6647a1f0c0a8e6f83948e2701f5e2dd7853ce26 Mon Sep 17 00:00:00 2001
From: JulienBalestra <julien.balestra@gmail.com>
Date: Wed, 30 Aug 2017 12:19:37 +0200
Subject: [PATCH] rkt image list

---
 pkg/kubelet/rkt/image.go    | 36 +++++++++++++----
 pkg/kubelet/rkt/rkt_test.go | 96 ---------------------------------------------
 2 files changed, 28 insertions(+), 104 deletions(-)

diff --git a/pkg/kubelet/rkt/image.go b/pkg/kubelet/rkt/image.go
index 3a1687b..ecae192 100644
--- a/pkg/kubelet/rkt/image.go
+++ b/pkg/kubelet/rkt/image.go
@@ -37,6 +37,7 @@ import (
 	"k8s.io/kubernetes/pkg/credentialprovider"
 	kubecontainer "k8s.io/kubernetes/pkg/kubelet/container"
 	"k8s.io/kubernetes/pkg/util/parsers"
+	"os/exec"
 )
 
 // PullImage invokes 'rkt fetch' to download an aci.
@@ -80,7 +81,7 @@ func (r *Runtime) PullImage(image kubecontainer.ImageSpec, pullSecrets []v1.Secr
 	// Today, `--no-store` will fetch the remote image regardless of whether the content of the image
 	// has changed or not. This causes performance downgrades when the image tag is ':latest' and
 	// the image pull policy is 'always'. The issue is tracked in https://github.com/coreos/rkt/issues/2937.
-	if _, err := r.cli.RunCommand(&config, "fetch", "--no-store", dockerPrefix+img); err != nil {
+	if _, err := r.cli.RunCommand(&config, "fetch", "--insecure-options=all", img); err != nil {
 		glog.Errorf("Failed to fetch: %v", err)
 		return "", err
 	}
@@ -98,20 +99,39 @@ func (r *Runtime) GetImageRef(image kubecontainer.ImageSpec) (string, error) {
 	return images[0].Id, nil
 }
 
+type RktImageList []RktImage
+
+type RktImage struct {
+	Id           string
+	Name         string
+	ImportTime   int64
+	LastUsedTime int64
+	Size         int64
+}
+
 // ListImages lists all the available appc images on the machine by invoking 'rkt image list'.
 func (r *Runtime) ListImages() ([]kubecontainer.Image, error) {
-	ctx, cancel := context.WithTimeout(context.Background(), r.requestTimeout)
-	defer cancel()
-	listResp, err := r.apisvc.ListImages(ctx, &rktapi.ListImagesRequest{})
+	commandLine := []string{"rkt", "image", "list", "--format=json"}
+	cmd := exec.Command(commandLine[0], commandLine[1:]...)
+	b, err := cmd.Output()
 	if err != nil {
-		return nil, fmt.Errorf("couldn't list images: %v", err)
+		glog.Errorf("fail to run %q: %s", strings.Join(commandLine, " "), err)
+		return nil, err
+	}
+
+	var rktImages RktImageList
+	err = json.Unmarshal(b, &rktImages)
+	if err != nil {
+		glog.Errorf("fail to unmarshal %s: %s", string(b), err)
+		return nil, err
 	}
 
-	images := make([]kubecontainer.Image, len(listResp.Images))
-	for i, image := range listResp.Images {
+	images := make([]kubecontainer.Image, len(rktImages))
+	for i, image := range rktImages {
+		glog.V(5).Infof("rkt image found: %s", image.Name)
 		images[i] = kubecontainer.Image{
 			ID:       image.Id,
-			RepoTags: []string{buildImageName(image)},
+			RepoTags: []string{image.Name},
 			Size:     image.Size,
 		}
 	}
diff --git a/pkg/kubelet/rkt/rkt_test.go b/pkg/kubelet/rkt/rkt_test.go
index 16c6617..dfcea20 100644
--- a/pkg/kubelet/rkt/rkt_test.go
+++ b/pkg/kubelet/rkt/rkt_test.go
@@ -262,102 +262,6 @@ func TestCheckVersion(t *testing.T) {
 	}
 }
 
-func TestListImages(t *testing.T) {
-	fr := newFakeRktInterface()
-	fs := newFakeSystemd()
-	r := &Runtime{apisvc: fr, systemd: fs}
-
-	tests := []struct {
-		images   []*rktapi.Image
-		expected []kubecontainer.Image
-	}{
-		{nil, []kubecontainer.Image{}},
-		{
-			[]*rktapi.Image{
-				{
-					Id:      "sha512-a2fb8f390702",
-					Name:    "quay.io/coreos/alpine-sh",
-					Version: "latest",
-				},
-			},
-			[]kubecontainer.Image{
-				{
-					ID:       "sha512-a2fb8f390702",
-					RepoTags: []string{"quay.io/coreos/alpine-sh:latest"},
-				},
-			},
-		},
-		{
-			[]*rktapi.Image{
-				{
-					Id:      "sha512-a2fb8f390702",
-					Name:    "quay.io/coreos/alpine-sh",
-					Version: "latest",
-					Size:    400,
-				},
-				{
-					Id:      "sha512-c6b597f42816",
-					Name:    "coreos.com/rkt/stage1-coreos",
-					Version: "0.10.0",
-					Size:    400,
-				},
-			},
-			[]kubecontainer.Image{
-				{
-					ID:       "sha512-a2fb8f390702",
-					RepoTags: []string{"quay.io/coreos/alpine-sh:latest"},
-					Size:     400,
-				},
-				{
-					ID:       "sha512-c6b597f42816",
-					RepoTags: []string{"coreos.com/rkt/stage1-coreos:0.10.0"},
-					Size:     400,
-				},
-			},
-		},
-		{
-			[]*rktapi.Image{
-				{
-					Id:      "sha512-a2fb8f390702",
-					Name:    "quay.io_443/coreos/alpine-sh",
-					Version: "latest",
-					Annotations: []*rktapi.KeyValue{
-						{
-							Key:   appcDockerRegistryURL,
-							Value: "quay.io:443",
-						},
-						{
-							Key:   appcDockerRepository,
-							Value: "coreos/alpine-sh",
-						},
-					},
-					Size: 400,
-				},
-			},
-			[]kubecontainer.Image{
-				{
-					ID:       "sha512-a2fb8f390702",
-					RepoTags: []string{"quay.io:443/coreos/alpine-sh:latest"},
-					Size:     400,
-				},
-			},
-		},
-	}
-
-	for i, tt := range tests {
-		fr.images = tt.images
-
-		images, err := r.ListImages()
-		if err != nil {
-			t.Errorf("%v", err)
-		}
-		assert.Equal(t, tt.expected, images)
-		assert.Equal(t, fr.called, []string{"ListImages"}, fmt.Sprintf("test case %d: unexpected called list", i))
-
-		fr.CleanCalls()
-	}
-}
-
 func TestGetPods(t *testing.T) {
 	fr := newFakeRktInterface()
 	fs := newFakeSystemd()
-- 
2.7.4

